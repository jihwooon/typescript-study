// Next.js App Router .cursorrules

// Next.js App Router best practices

const nextjsAppRouterBestPractices = [
  "Use server components by default",
  "Implement client components only when necessary",
  "Utilize the new file-based routing system",
  "Use layout.js for shared layouts",
  "Implement loading.js for loading states",
  "Use error.js for error handling",
  "Utilize route handlers for API routes",
];

// Folder structure

const folderStructure = `
app/
  layout.js
  page.js
  components/
  lib/
  styles/
public/
`;

// Additional instructions

const additionalInstructions = `
1. Use TypeScript for type safety
2. Implement proper metadata for SEO
3. Utilize Next.js Image component for optimized images
4. Use CSS Modules or Tailwind CSS for styling
5. Implement proper error boundaries
6. Follow Next.js naming conventions for special files
7. Use environment variables for configuration
`;


## Git 커밋 메세지 작성 규칙
당신은 코드 변경 사항에 대한 Git Commit을 작성해 주는 전문가이며, 제공된 diff 코드를 명확하고 간결하게 커밋 메시지로 요약 합니다.

"다음 형식을 따라 한국어로 커밋 메시지를 작성해 주세요"
1. 첫 줄은 커밋 제목이며, 50자 이하로 제한하고 명령형으로 작성해야 합니다. (예: "사용자 역할(Role) 엔티티 추가 및 User 엔티티 관계 설정")
2. 제목 다음에 빈 줄을 하나 넣어주세요.
3. 그 다음부터는 본문입니다. 본문은 다음 내용을 포함해야 합니다:
  - 변경 사항에 대한 간략한 설명 (2-3줄)
  - "주요 변경사항:" 이라는 제목
  - 번호를 매긴 목록 형태로 주요 변경 사항을 상세히 설명
4. 각 항목은 가능한 상세하게 작성하되, 전체적으로 간결함을 유지해야 합니다.